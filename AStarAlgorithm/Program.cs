using Task1_2D;

class Tester
{
    public static void Main()
    {
        // Adjacency Matrix of Graph
        // Visual Representation:
        //
        //     0  1  2  3  4  5  6  7  8    
        //   +----------------------------+
        // 0 | 0  4  0  0  0  0  0  8  0  | 
        // 1 | 4  0  8  0  0  0  0 11  0  | 
        // 2 | 0  8  0  7  0  4  0  0  2  | 
        // 3 | 0  0  7  0  9 14  0  0  0  | 
        // 4 | 0  0  0  9  0 10  0  0  0  | 
        // 5 | 0  0  4 14 10  0  2  0  0  | 
        // 6 | 0  0  0  0  0  2  0  1  6  | 
        // 7 | 8 11  0  0  0  0  1  0  7  | 
        // 8 | 0  0  2  0  0  0  6  7  0  | 
        //   +----------------------------+

        int[,] graph = new int[,] { { 0, 4, 0, 0, 0, 0, 0, 8, 0 },
                                    { 4, 0, 8, 0, 0, 0, 0, 11, 0 },
                                    { 0, 8, 0, 7, 0, 4, 0, 0, 2 },
                                    { 0, 0, 7, 0, 9, 14, 0, 0, 0 },
                                    { 0, 0, 0, 9, 0, 10, 0, 0, 0 },
                                    { 0, 0, 4, 14, 10, 0, 2, 0, 0 },
                                    { 0, 0, 0, 0, 0, 2, 0, 1, 6 },
                                    { 8, 11, 0, 0, 0, 0, 1, 0, 7 },
                                    { 0, 0, 2, 0, 0, 0, 6, 7, 0 } };

        AStarAlgorithm t = new();
        t.Run(graph, 0, 5);
    }
}